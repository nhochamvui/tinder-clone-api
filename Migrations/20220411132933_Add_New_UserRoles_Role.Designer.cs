// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TinderClone.Models;

namespace TinderClone.Migrations
{
    [DbContext(typeof(TinderContext))]
    [Migration("20220411132933_Add_New_UserRoles_Role")]
    partial class Add_New_UserRoles_Role
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<long>("RolesRoleID")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesRoleID", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("TinderClone.Models.DiscoverySettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AgePreferenceCheck")
                        .HasColumnType("boolean");

                    b.Property<int>("DistancePreference")
                        .HasColumnType("integer");

                    b.Property<bool>("DistancePreferenceCheck")
                        .HasColumnType("boolean");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("LookingForGender")
                        .HasColumnType("integer");

                    b.Property<int>("MaxAge")
                        .HasColumnType("integer");

                    b.Property<int>("MinAge")
                        .HasColumnType("integer");

                    b.Property<int>("SuperlikeCount")
                        .HasColumnType("integer");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("DiscoverySettings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AgePreferenceCheck = true,
                            DistancePreference = 1,
                            DistancePreferenceCheck = true,
                            LikeCount = 100,
                            Location = "Hồ Chí Minh",
                            LookingForGender = 2,
                            MaxAge = 100,
                            MinAge = 18,
                            SuperlikeCount = 4,
                            UserID = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AgePreferenceCheck = true,
                            DistancePreference = 1,
                            DistancePreferenceCheck = true,
                            LikeCount = 100,
                            Location = "Hồ Chí Minh",
                            LookingForGender = 2,
                            MaxAge = 100,
                            MinAge = 18,
                            SuperlikeCount = 4,
                            UserID = 2L
                        });
                });

            modelBuilder.Entity("TinderClone.Models.Matches", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DateOfMatch")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDislike")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMatched")
                        .HasColumnType("boolean");

                    b.Property<long>("MyId")
                        .HasColumnType("bigint");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("TinderClone.Models.Messages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("content")
                        .HasColumnType("text");

                    b.Property<long>("fromID")
                        .HasColumnType("bigint");

                    b.Property<bool>("isRead")
                        .HasColumnType("boolean");

                    b.Property<bool>("isSent")
                        .HasColumnType("boolean");

                    b.Property<long>("timeStamp")
                        .HasColumnType("bigint");

                    b.Property<long>("toID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("fromID");

                    b.HasIndex("toID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TinderClone.Models.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Hometown")
                        .HasColumnType("text");

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            About = "",
                            DateOfBirth = new DateTime(1998, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a@gmail.com",
                            Gender = 2,
                            Hometown = "Cần Thơ",
                            Latitude = "10.0371100",
                            Location = "Hồ Chí Minh",
                            Longitude = "105.7882500",
                            Name = "Tho",
                            Phone = "0907904598",
                            UserID = 1L
                        },
                        new
                        {
                            Id = 2L,
                            About = "",
                            DateOfBirth = new DateTime(1998, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a1@gmail.com",
                            Gender = 2,
                            Hometown = "Cần Thơ",
                            Latitude = "10.045783",
                            Location = "Hồ Chí Minh",
                            Longitude = "105.761412",
                            Name = "Jan",
                            Phone = "0907904598",
                            UserID = 2L
                        });
                });

            modelBuilder.Entity("TinderClone.Models.ProfileImages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DeleteURL")
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ProfileID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileID");

                    b.ToTable("ProfileImages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ImageURL = "https://i.ibb.co/VYgMyVd/217772307-360659078758844-3269291223653109900-n.jpg",
                            ProfileID = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ImageURL = "https://i.ibb.co/6mYstg7/273538889-1378020902629820-5496867161341207743-n.jpg",
                            ProfileID = 2L
                        });
                });

            modelBuilder.Entity("TinderClone.Models.Role", b =>
                {
                    b.Property<long>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("TinderClone.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Password = "1234",
                            UserName = "unclebob"
                        },
                        new
                        {
                            Id = 2L,
                            Password = "1234",
                            UserName = "auntbob"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("TinderClone.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TinderClone.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TinderClone.Models.DiscoverySettings", b =>
                {
                    b.HasOne("TinderClone.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TinderClone.Models.Messages", b =>
                {
                    b.HasOne("TinderClone.Models.User", null)
                        .WithMany()
                        .HasForeignKey("fromID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TinderClone.Models.User", null)
                        .WithMany()
                        .HasForeignKey("toID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TinderClone.Models.Profile", b =>
                {
                    b.HasOne("TinderClone.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("TinderClone.Models.Profile", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TinderClone.Models.ProfileImages", b =>
                {
                    b.HasOne("TinderClone.Models.Profile", "Profile")
                        .WithMany("ProfileImages")
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("TinderClone.Models.Profile", b =>
                {
                    b.Navigation("ProfileImages");
                });

            modelBuilder.Entity("TinderClone.Models.User", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
